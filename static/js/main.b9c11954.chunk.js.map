{"version":3,"sources":["contexts/songs/SongContext.js","contexts/songs/SongReducer.js","types/songType.js","contexts/songs/SongState.js","components/Nav.js","components/Song.js","components/SongsList.js","components/Lyric.js","components/Footer.js","App.js","index.js"],"names":["SongContext","createContext","state","action","type","trackList","payload","currentTrack","lyrics","SongState","props","api_key","credentials","useReducer","SongReducer","dispatch","setCurrentTrack","track","addLyrics","Provider","value","getSongs","getLyricFromAPI","track_id","URL","fetch","then","response","json","data","message","header","status_code","body","getCurrentTrackFromAPI","children","Nav","className","id","href","Song","element","artist_name","track_name","album_name","to","SongsList","Context","useContext","console","log","useEffect","track_list","getData","length","map","key","Lyric","match","params","lyrics_body","album_id","explicit","updated_time","Date","toDateString","Footer","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"yMAIeA,EAFKC,0B,OCIL,WAACC,EAAOC,GACnB,OAAQA,EAAOC,MACX,ICRiB,YDSb,OAAO,eACAF,EADP,CAEIG,UAAWF,EAAOG,QAClBC,aAAc,KAEtB,ICbiB,YDcb,OAAO,eACAL,EADP,CAEIM,OAAQL,EAAOG,UAEvB,ICjByB,oBDkBrB,OAAO,eACAJ,EADP,CAEIK,aAAcJ,EAAOG,UAG7B,QACI,OAAOJ,I,OEgDJO,EAhEG,SAAAC,GAAU,IAEhBC,EAAYC,EAAZD,QAFe,EAUGE,qBAAWC,EANhB,CACjBT,UAAW,GACXG,OAAQ,GACRD,aAAc,KAPK,mBAUhBL,EAVgB,KAUTa,EAVS,KA0BjBC,EAAkB,SAAAC,GACpBF,EAAS,CACLX,KDpCqB,oBCqCrBE,QAASW,KAIXC,EAAY,SAAAV,GACdO,EAAS,CACLX,KD5Ca,YC6CbE,QAASE,KAWjB,OACI,kBAAC,EAAYW,SAAb,CACIC,MAAO,CACHf,UAAWH,EAAMG,UACjBG,OAAQN,EAAMM,OACdD,aAAcL,EAAMK,aACpBc,SAbK,SAAAhB,GACbU,EAAS,CACLX,KDpDa,YCqDbE,QAASD,KAWLiB,gBAnCY,SAAAC,GACpB,IAAMC,EAAG,0GAAsGD,EAAtG,mBAAyHZ,GAClIc,MAAMD,GACDE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAwC,MAApCA,EAAKC,QAAQC,OAAOC,aAAuBd,EAAUW,EAAKC,QAAQG,KAAKzB,YAgCjF0B,uBA3CmB,SAAAX,GAC3B,IAAMC,EAAG,mGAA+FD,EAA/F,mBAAkHZ,GAC3Hc,MAAMD,GACDE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAwC,MAApCA,EAAKC,QAAQC,OAAOC,aAAuBhB,EAAgBa,EAAKC,QAAQG,KAAKhB,aA0C1FP,EAAMyB,W,cCvDJC,EAXH,kBACR,yBAAKC,UAAU,+CAA+CC,GAAG,UAC7D,yBAAKD,UAAU,mBACX,uBAAGA,UAAU,eAAeE,KAAK,cAC7B,wBAAIF,UAAU,8BAA6B,kCAAO,0BAAMA,UAAU,cAAhB,gBC0BnDG,EA7BF,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACT,yBAAKJ,UAAU,qBACX,yBAAKA,UAAU,2BACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,0BAA0BI,EAAQC,aAChD,wBAAIL,UAAU,oBACV,wBAAIA,UAAU,oBACV,uBAAGA,UAAU,iCADjB,WAGA,wBAAIA,UAAU,+BACV,gCAASI,EAAQE,cAGzB,wBAAIN,UAAU,eACV,wBAAIA,UAAU,oBACV,uBAAGA,UAAU,6BADjB,WAGA,wBAAIA,UAAU,+BACV,gCAASI,EAAQG,cAGzB,yBAAKP,UAAU,eACX,kBAAC,IAAD,CAAMQ,GAAE,uBAAkBJ,EAAQlB,UAAYc,UAAU,+CAA8C,uBAAGA,UAAU,oCAAsC,0BAAMA,UAAU,eAAhB,oBCmC9JS,EAvDG,WAEd,IAAMC,EAAUC,qBAAWhD,GACnBK,EAAwB0C,EAAxB1C,UAAWgB,EAAa0B,EAAb1B,SAEXV,EAAYC,EAAZD,QACRsC,QAAQC,IAAI7C,GAcZ,OALA8C,qBAAU,YAPM,WACZ,IAAM3B,EAAG,sJAAkJb,GAC3Jc,MAAMD,GACDE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIR,EAASQ,EAAKC,QAAQG,KAAKmB,eAI7CC,KAED,IAGC,oCACI,6BAAShB,UAAU,mBACf,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,yBACX,wBAAIA,UAAU,mBAAd,8BACA,2BAAOA,UAAU,iBAAiBjC,KAAK,SACvC,4BAAQiC,UAAU,oCAAoCjC,KAAK,UAA3D,cAKhB,6BAASiC,UAAU,kBACf,yBAAKA,UAAU,aACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,iBACf,gDAIZ,yBAAKA,UAAU,OACVhC,EAAUiD,OAAS,GAChBjD,EAAUkD,KAAI,SAAAd,GAAO,OAAI,kBAAC,EAAD,CAAMe,IAAKf,EAAQxB,MAAMM,SAAUkB,QAASA,EAAQxB,gBCM1FwC,EApDD,SAAA/C,GAEV,IAAMqC,EAAUC,qBAAWhD,GACnBQ,EAAkEuC,EAAlEvC,OAAQD,EAA0DwC,EAA1DxC,aAAce,EAA4CyB,EAA5CzB,gBAAiBY,EAA2Ba,EAA3Bb,uBAEzCX,EAAWb,EAAMgD,MAAMC,OAAOpC,SAUpC,OARA0B,QAAQC,IAAI3C,GAEZ4C,qBAAU,WACN7B,EAAgBC,GAChBW,EAAuBX,KAExB,IAGC,oCACI,6BAASc,UAAU,mBACf,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,yBACX,kBAAC,IAAD,CAAMQ,GAAG,IAAIR,UAAU,sCAAsCjC,KAAK,UAAS,0BAAMiC,UAAU,eAAhB,gBAK3F,yBAAKA,UAAU,aACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,kCACV9B,GAAgB,2BAAIA,EAAaoC,WAAjB,OAAiCpC,EAAamC,cAEnE,yBAAKL,UAAU,aACX,uBAAGA,UAAU,aAAa7B,EAAOoD,eAGzC,gCAAYvB,UAAU,6DAClB,wBAAIA,UAAU,OACV,wBAAIA,UAAU,YAAd,aACA,wBAAIA,UAAU,YAAY9B,EAAasD,UACvC,wBAAIxB,UAAU,YAAd,eACA,wBAAIA,UAAU,YAAY9B,EAAaqC,YACvC,wBAAIP,UAAU,YAAd,oBACA,wBAAIA,UAAU,YAAgC,IAApB7B,EAAOsD,SAAiB,KAAO,MACzD,wBAAIzB,UAAU,YAAd,gBACA,wBAAIA,UAAU,YAAY7B,EAAOuD,cAAgB,IAAIC,KAAKxD,EAAOuD,cAAcE,qBCpCxFC,EAVA,WACX,OACI,4BAAQ7B,UAAU,sBACd,yBAAKA,UAAU,yBACX,uBAAGA,UAAU,mBAAkB,kCAAO,0BAAMA,UAAU,cAAhB,WAAtC,kBAAgG,oDCiBjG8B,EAfH,WACR,OACI,kBAAC,EAAD,KACI,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWxB,IACjC,kBAAC,IAAD,CAAOsB,OAAK,EAACC,KAAK,yBAAyBC,UAAWb,KAE1D,kBAAC,EAAD,SCbhBc,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.b9c11954.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nconst SongContext = createContext();\r\n\r\nexport default SongContext;","import {\r\n    GET_SONGS,\r\n    ADD_LYRIC,\r\n    SET_CURRENT_TRACK\r\n} from '../../types/songType';\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case GET_SONGS:\r\n            return {\r\n                ...state,\r\n                trackList: action.payload,\r\n                currentTrack: {}\r\n            }\r\n        case ADD_LYRIC:\r\n            return {\r\n                ...state,\r\n                lyrics: action.payload\r\n            }\r\n        case SET_CURRENT_TRACK:\r\n            return {\r\n                ...state,\r\n                currentTrack: action.payload\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","export const GET_SONGS = 'GET_SONGS';\r\nexport const ADD_LYRIC = 'ADD_LYRIC';\r\nexport const SET_CURRENT_TRACK = 'SET_CURRENT_TRACK';","import React, { useReducer } from 'react';\r\nimport SongContext from './SongContext';\r\nimport SongReducer from './SongReducer';\r\nimport credentials from '../../credentials.json';\r\nimport {\r\n    GET_SONGS,\r\n    ADD_LYRIC,\r\n    SET_CURRENT_TRACK\r\n} from '../../types/songType';\r\n\r\nconst SongState = props => {\r\n\r\n    const { api_key } = credentials;\r\n\r\n    const initialState = {\r\n        trackList: [],\r\n        lyrics: {},\r\n        currentTrack: {}\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(SongReducer, initialState);\r\n\r\n    const getCurrentTrackFromAPI = track_id => {\r\n        const URL = `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.get?track_id=${track_id}&apikey=${api_key}`;\r\n        fetch(URL)\r\n            .then(response => response.json())\r\n            .then(data => data.message.header.status_code === 200 && setCurrentTrack(data.message.body.track))\r\n    }\r\n\r\n    const getLyricFromAPI = track_id => {\r\n        const URL = `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=${track_id}&apikey=${api_key}`;\r\n        fetch(URL)\r\n            .then(response => response.json())\r\n            .then(data => data.message.header.status_code === 200 && addLyrics(data.message.body.lyrics))\r\n    }\r\n\r\n    const setCurrentTrack = track => {\r\n        dispatch({\r\n            type: SET_CURRENT_TRACK,\r\n            payload: track\r\n        });\r\n    }\r\n\r\n    const addLyrics = lyrics => {\r\n        dispatch({\r\n            type: ADD_LYRIC,\r\n            payload: lyrics\r\n        });\r\n    }\r\n\r\n    const getSongs = trackList => {\r\n        dispatch({\r\n            type: GET_SONGS,\r\n            payload: trackList\r\n        });\r\n    }\r\n\r\n    return (\r\n        <SongContext.Provider\r\n            value={{\r\n                trackList: state.trackList,\r\n                lyrics: state.lyrics,\r\n                currentTrack: state.currentTrack,\r\n                getSongs,\r\n                getLyricFromAPI,\r\n                getCurrentTrackFromAPI\r\n            }}\r\n        >\r\n            {props.children}\r\n        </SongContext.Provider>\r\n    );\r\n\r\n}\r\n\r\nexport default SongState;","import React from 'react';\r\n\r\nconst Nav = () => (\r\n    <nav className=\"navbar navbar-expand-lg navigation fixed-top\" id=\"navbar\">\r\n        <div className=\"container-fluid\">\r\n            <a className=\"navbar-brand\" href=\"index.html\">\r\n                <h2 className=\"text-white text-capitalize\"><i>Song<span className=\"text-color\">Finder</span></i></h2>\r\n            </a>\r\n        </div>\r\n    </nav>\r\n);\r\n\r\n\r\nexport default Nav;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Song = ({ element }) => (\r\n    <div className=\"col-lg-6 col-md-6\">\r\n        <div className=\"card rounded-0 p-0 mb-5\">\r\n            <div className=\"card-body\">\r\n                <h4 className=\"mt-3 mb-3 orange-hover\">{element.artist_name}</h4>\r\n                <ul className=\"list-inline mb-0\">\r\n                    <li className=\"list-inline-item\">\r\n                        <i className=\"ti-music-alt mr-2 text-color\"></i>Track :\r\n\t\t\t\t\t\t</li>\r\n                    <li className=\"list-inline-item text-black\">\r\n                        <strong>{element.track_name}</strong>\r\n                    </li>\r\n                </ul>\r\n                <ul className=\"list-inline\">\r\n                    <li className=\"list-inline-item\">\r\n                        <i className=\"ti-world mr-2 text-color\"></i>Album :\r\n\t\t\t\t\t\t</li>\r\n                    <li className=\"list-inline-item text-black\">\r\n                        <strong>{element.album_name}</strong>\r\n                    </li>\r\n                </ul>\r\n                <div className=\"text-center\">\r\n                    <Link to={`/track/lyric/${element.track_id}`} className=\"btn btn-outline-danger left-rd30 rigth-rd30\"><i className=\"ti-control-play mr-2 text-color\"></i><span className=\"white-hover\">View Lyric</span></Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Song;","import React, { useEffect, useContext } from 'react';\r\nimport SongContext from '../contexts/songs/SongContext';\r\nimport Song from './Song';\r\nimport credentials from '../credentials.json';\r\n\r\nconst SongsList = () => {\r\n\r\n    const Context = useContext(SongContext);\r\n    const { trackList, getSongs } = Context;\r\n\r\n    const { api_key } = credentials;\r\n    console.log(trackList)\r\n\r\n    const getData = () => {\r\n        const URL = `https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/chart.tracks.get?page=1&page_size=10&country=us&f_has_lyrics=1&apikey=${api_key}`;\r\n        fetch(URL)\r\n            .then(response => response.json())\r\n            .then(data => getSongs(data.message.body.track_list))\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <section className=\"page-title bg-2\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12 text-center\">\r\n                            <h3 className=\"text-white mt-2\">Get the lyric for any song</h3>\r\n                            <input className=\"mb-5 left-rd30\" type=\"text\"></input>\r\n                            <button className=\"btn btn-outline-danger rigth-rd30\" type=\"button\">search</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <section className=\"section course\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-lg-8 text-center\">\r\n                            <div className=\"section-title\">\r\n                                <div className=\"divider mb-3\"></div>\r\n                                <h2>Popular Songs</h2>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {trackList.length > 0 &&\r\n                            trackList.map(element => <Song key={element.track.track_id} element={element.track} />)\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default SongsList;","import React, { useEffect, useContext } from 'react';\r\nimport SongContext from '../contexts/songs/SongContext';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Lyric = props => {\r\n\r\n    const Context = useContext(SongContext);\r\n    const { lyrics, currentTrack, getLyricFromAPI, getCurrentTrackFromAPI } = Context;\r\n\r\n    const track_id = props.match.params.track_id;\r\n\r\n    console.log(currentTrack)\r\n\r\n    useEffect(() => {\r\n        getLyricFromAPI(track_id);\r\n        getCurrentTrackFromAPI(track_id);\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <section className=\"page-title bg-2\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-12 text-center\">\r\n                            <Link to=\"/\" className=\"btn btn-danger left-rd30 rigth-rd30\" type=\"button\"><span className=\"white-hover\">go back</span></Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            <div className=\"container\">\r\n                <div className=\"card mt-5\">\r\n                    <div className=\"card-header card-header-orange\">\r\n                        {currentTrack && <b>{currentTrack.track_name} By {currentTrack.artist_name}</b>}\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <p className=\"card-text\">{lyrics.lyrics_body}</p>\r\n                    </div>\r\n                </div>\r\n                <blockquote className=\"blockquote p-4 bg-white text-black font-italic mb-80 mt-3\">\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Album ID:</dt>\r\n                        <dd className=\"col-sm-9\">{currentTrack.album_id}</dd>\r\n                        <dt className=\"col-sm-3\">Album Name:</dt>\r\n                        <dd className=\"col-sm-9\">{currentTrack.album_name}</dd>\r\n                        <dt className=\"col-sm-3\">Explicit Worlds:</dt>\r\n                        <dd className=\"col-sm-9\">{lyrics.explicit === 0 ? 'No' : 'Si'}</dd>\r\n                        <dt className=\"col-sm-3\">Update Date:</dt>\r\n                        <dd className=\"col-sm-9\">{lyrics.updated_time && new Date(lyrics.updated_time).toDateString()}</dd>\r\n                    </dl>\r\n                </blockquote>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Lyric;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"footer bg-black-50\">\r\n            <div className=\"container text-center\">\r\n                <p className=\"text-white mt-3\"><b>Song<span className=\"text-color\">Finder</span></b> © 2020, By <b>Jean C. Contreras</b></p>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport SongState from './contexts/songs/SongState';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport Nav from './components/Nav';\r\nimport SongsList from './components/SongsList';\r\nimport Lyric from './components/Lyric';\r\nimport Footer from './components/Footer';\r\n\r\nconst App = () => {\r\n    return (\r\n        <SongState>\r\n            <BrowserRouter>\r\n                <Nav />\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={SongsList} />\r\n                    <Route exact path=\"/track/lyric/:track_id\" component={Lyric} />\r\n                </Switch>\r\n                <Footer />\r\n            </BrowserRouter>\r\n        </SongState>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}